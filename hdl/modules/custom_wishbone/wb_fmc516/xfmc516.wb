peripheral {
  name = "FMC ADC 250MS/s core registers";
  description = "Wishbone slave for FMC ADC 250MS/s core";
  hdl_entity = "wb_fmc516_port";
  prefix = "fmc516";

  reg {
    name = "Control register";
    prefix = "fmc_ctl";

    field {
      name = "Enable test data";
      description = "Write the address counter value instead of ADC data to Wishbone Streaming Interface";
      prefix = "test_data_en";
      type = BIT;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };

    field {
      name = "Manual LED 0";
      description = "Manual control of the front panel LED 0";
      prefix = "led_0";
      type = BIT;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };

    field {
      name = "Manual LED 1";
      description = "Manual control of the front panel LED 1";
      prefix = "led_1";
      type = BIT;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };

    field {
      name = "Internal/External clock distribution selection";
      description = "Select between internal VCXO or external reference clock \
                      write 0: internal reference \
                      write 1: external reference";
      prefix = "clk_sel";
      type = BIT;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };

    field {
      name = "Reserved";
      description = "Ignore on write, read as 0's";
      prefix = "reserved";
      type = SLV;
      size = 28;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
  };

  reg {
    name = "Status register";
    prefix = "fmc_sta";

    field {
      name = "MMCM locked status";
      description = "ADC Clock Chain MMCM locked status.  \
                      read 0: not locked  \
                      read 1: locked";
      prefix = "mmcm_locked";
      type = BIT;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };

    field {
      name = "FMC power good status";
      description = "FMC power good status. \
                      read 0: power not good  \
                      read 1: power good";
      prefix = "pwr_good";
      type = BIT;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };

    field {
      name = "FMC board present status";
      description = "FMC board present status.\n0: not present\n1: present";
      prefix = "prst";
      type = BIT;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };

    field {
      name = "Reserved";
      description = "Ignore on write, read as 0's";
      prefix = "reserved";
      type = SLV;
      size = 29;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
  };

  reg {
    name = "Trigger configuration";
    prefix = "trig_cfg";

    field {
      name = "Hardware trigger polarity";
      description = "write 0: positive edge/slope \
                      write 1: negative edge/slope";
      prefix = "hw_trig_pol";
      type = BIT;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
      clock = "fs_clk_i";
    };

    field {
      name = "Hardware trigger enable";
      description = "write 0: disable \
                      write 1: enable";
      prefix = "hw_trig_en";
      type = BIT;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
      clock = "fs_clk_i";
    };

    field {
      name = "Reserved";
      description = "Ignore on write, read as 0's";
      prefix = "reserved";
      type = SLV;
      size = 30;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
  };

  --reg {
  --  name = "Trigger delay";
  --  prefix = "trig_dly";
  --
  --  field {
  --    name = "Trigger delay value";
  --    description = "Delay to apply on the trigger in sampling clock period. \
  --                    \nThe default clock frequency is 100MHz (period = 10ns).";
  --    type = SLV;
  --    size = 32;
  --    access_bus = READ_WRITE;
  --    access_dev = READ_ONLY;
  --  };
  --};

  reg {
    name = "Global ADC Status register";
    description = "Global ADC status register.";
    prefix = "adc_sta";

    field {
      name = "FMC ADC clock chains";
      description = "FMC ADC used clock chains. \
                      read 1: clock chain is used  \
                      read 0: clock chain is not used";
      prefix = "clk_chains";
      type = SLV;
      size = 4;
      align = 8;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };

    field {
      name = "FMC ADC Data chains";
      description = "FMC ADC used clock chains. \
                      read 1: data chain is used  \
                      read 0: data chain is not used";
      prefix = "data_chains";
      type = SLV;
      size = 4;
      align = 8;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };

    field {
      name = "FMC ADC packet size";
      description = "Size of the packet sent to the Wishbone Streaming Interface. \
                      This will appear as cycles of <packet_size> clock cycles on \
                      the wishbone interface";
      prefix = "adc_pkt_size";
      type = SLV;
      size = 16;
      align = 16;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
  };

  reg {
    name = "Global ADC Control register";
    description = "Global ADC control register.";
    prefix = "adc_ctl";

    field {
      name = "Update ADC clock/data chains delay";
      description = "write 1: update clock/data chains with the values in the delay registers.\
                      write 0: no effect";

      prefix = "update_dly";
      -- Pulse to start
      type = MONOSTABLE;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };

    field {
      name = "Reserved";
      description = "Ignore on write, read as 0's";
      prefix = "reserved";
      type = SLV;
      size = 31;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
  };

  reg {
    name = "Channel 0 status register";
    prefix = "ch0_sta";

    field {
      name = "Channel 0 current ADC value";
      description = "Current ADC raw value. The format is binary two's complement.";
      prefix = "val";
      type = SLV;
      size = 16;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
      --clock = "fs_clk_i";
      clock = "wb_clk_i";
    };

    field {
      name = "Reserved";
      description = "Ignore on write, read as 0's";
      prefix = "reserved";
      type = SLV;
      size = 16;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
  };

  reg {
    name = "Channel 0 control register";
    prefix = "ch0_ctl";

    field {
      name = "ADC clock chain delay";
      description = "ADC clock chain delay";
      prefix = "clk_chain_dly";
      type = SLV;
      size = 5;
      align = 8;
      access_bus = READ_WRITE;
      access_dev = READ_WRITE;
      load = LOAD_EXT;
    };

    field {
      name = "ADC data chain delay";
      description = "ADC data chain delay";
      prefix = "data_chain_dly";
      type = SLV;
      size = 5;
      align = 8;
      access_bus = READ_WRITE;
      access_dev = READ_WRITE;
      load = LOAD_EXT;
    };

    field {
      name = "Reserved";
      description = "Ignore on write, read as 0's";
      prefix = "reserved";
      type = SLV;
      size = 16;
      align = 16;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
  };

  reg {
    name = "Channel 1 status register";
    prefix = "ch1_sta";

    field {
      name = "Channel 1 current ADC value";
      description = "Current ADC raw value. The format is binary two's complement.";
      prefix = "val";
      type = SLV;
      size = 16;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
      --clock = "fs_clk_i";
      clock = "wb_clk_i";
    };

    field {
      name = "Reserved";
      description = "Ignore on write, read as 0's";
      prefix = "reserved";
      type = SLV;
      size = 16;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
  };

  reg {
    name = "Channel 1 control register";
    prefix = "ch1_ctl";

    field {
      name = "ADC clock chain delay";
      description = "ADC clock chain delay";
      prefix = "clk_chain_dly";
      type = SLV;
      size = 5;
      align = 8;
      access_bus = READ_WRITE;
      access_dev = READ_WRITE;
      load = LOAD_EXT;
    };

    field {
      name = "ADC data chain delay";
      description = "ADC data chain delay";
      prefix = "data_chain_dly";
      type = SLV;
      size = 5;
      align = 8;
      access_bus = READ_WRITE;
      access_dev = READ_WRITE;
      load = LOAD_EXT;
    };

    field {
      name = "Reserved";
      description = "Ignore on write, read as 0's";
      prefix = "reserved";
      type = SLV;
      size = 16;
      align = 16;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
  };

  reg {
    name = "Channel 2 status register";
    prefix = "ch2_sta";

    field {
      name = "Channel 2 current ADC value";
      description = "Current ADC raw value. The format is binary two's complement.";
      prefix = "val";
      type = SLV;
      size = 16;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
      --clock = "fs_clk_i";
      clock = "wb_clk_i";
    };

    field {
      name = "Reserved";
      description = "Ignore on write, read as 0's";
      prefix = "reserved";
      type = SLV;
      size = 16;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
  };

  reg {
    name = "Channel 2 control register";
    prefix = "ch2_ctl";

    field {
      name = "ADC clock chain delay";
      description = "ADC clock chain delay";
      prefix = "clk_chain_dly";
      type = SLV;
      size = 5;
      align = 8;
      access_bus = READ_WRITE;
      access_dev = READ_WRITE;
      load = LOAD_EXT;
    };

    field {
      name = "ADC data chain delay";
      description = "ADC data chain delay";
      prefix = "data_chain_dly";
      type = SLV;
      size = 5;
      align = 8;
      access_bus = READ_WRITE;
      access_dev = READ_WRITE;
      load = LOAD_EXT;
    };

    field {
      name = "Reserved";
      description = "Ignore on write, read as 0's";
      prefix = "reserved";
      type = SLV;
      size = 16;
      align = 16;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
  };

  reg {
    name = "Channel 3 status register";
    prefix = "ch3_sta";

    field {
      name = "Channel 3 current ADC value";
      description = "Current ADC raw value. The format is binary two's complement.";
      prefix = "val";
      type = SLV;
      size = 16;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
      --clock = "fs_clk_i";
      clock = "wb_clk_i";
    };

    field {
      name = "Reserved";
      description = "Ignore on write, read as 0's";
      prefix = "reserved";
      type = SLV;
      size = 16;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
  };

  reg {
    name = "Channel 3 control register";
    prefix = "ch3_ctl";

    field {
      name = "ADC clock chain delay";
      description = "ADC clock chain delay";
      prefix = "clk_chain_dly";
      type = SLV;
      size = 5;
      align = 8;
      access_bus = READ_WRITE;
      access_dev = READ_WRITE;
      load = LOAD_EXT;
    };

    field {
      name = "ADC data chain delay";
      description = "ADC data chain delay";
      prefix = "data_chain_dly";
      type = SLV;
      size = 5;
      align = 8;
      access_bus = READ_WRITE;
      access_dev = READ_WRITE;
      load = LOAD_EXT;
    };

    field {
      name = "Reserved";
      description = "Ignore on write, read as 0's";
      prefix = "reserved";
      type = SLV;
      size = 16;
      align = 16;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
  };
};
